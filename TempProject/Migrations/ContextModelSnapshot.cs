// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TempProject.Models;

#nullable disable

namespace TempProject.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TempProject.Models.Accident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccidentCausesId")
                        .HasColumnType("int");

                    b.Property<string>("AccidentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassificationOfAccidentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("date");

                    b.Property<string>("DescriptionOfTheEvent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectCauses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrillerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmediateActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Pictures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreventionCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PusherEmpCode")
                        .HasColumnType("int");

                    b.Property<int>("QHSEEmpCode")
                        .HasColumnType("int");

                    b.Property<int>("QHSEPositionId")
                        .HasColumnType("int");

                    b.Property<int>("QHSEPositionNameId")
                        .HasColumnType("int");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RigId")
                        .HasColumnType("int");

                    b.Property<string>("RootCauses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeOfEvent")
                        .HasColumnType("time");

                    b.Property<int>("ToolPusherPositionId")
                        .HasColumnType("int");

                    b.Property<int>("ToolPusherPositionNameId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfInjuryID")
                        .HasColumnType("int");

                    b.Property<int>("ViolationCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccidentCausesId");

                    b.HasIndex("ClassificationOfAccidentId");

                    b.HasIndex("PreventionCategoryId");

                    b.HasIndex("QHSEPositionId");

                    b.HasIndex("QHSEPositionNameId");

                    b.HasIndex("RigId");

                    b.HasIndex("ToolPusherPositionId");

                    b.HasIndex("ToolPusherPositionNameId");

                    b.HasIndex("TypeOfInjuryID");

                    b.HasIndex("ViolationCategoryId");

                    b.HasIndex("userID");

                    b.ToTable("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.AccidentCauses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccidentCauses");
                });

            modelBuilder.Entity("TempProject.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("No")
                        .HasColumnType("int");

                    b.Property<int>("PTSMId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PTSMId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("TempProject.Models.BOP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Catering")
                        .HasColumnType("int");

                    b.Property<int>("Client")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ECDC")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManPower")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("Rental")
                        .HasColumnType("int");

                    b.Property<int>("RigId")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<int>("TotalManHours")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Visitors")
                        .HasColumnType("int");

                    b.Property<int>("WatchMen")
                        .HasColumnType("int");

                    b.Property<int>("inspection")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RigId");

                    b.HasIndex("UserId");

                    b.ToTable("Bop");
                });

            modelBuilder.Entity("TempProject.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("TempProject.Models.ClassificationOfAccident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClassificationOfAccidents");
                });

            modelBuilder.Entity("TempProject.Models.ComminucationMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComminucationMethods");
                });

            modelBuilder.Entity("TempProject.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LicenceExpireData")
                        .HasColumnType("date");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriverNames");
                });

            modelBuilder.Entity("TempProject.Models.JMP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ArrivalStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommunicationID")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("date");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("DriverNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedArriveDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("EstimatedArriveTime")
                        .HasColumnType("time");

                    b.Property<string>("InspectionVechile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JournyManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JournyNumber")
                        .HasColumnType("int");

                    b.Property<string>("ManagerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NightDrivingReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurposeOfJourny")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QHSEManagerMustApprove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReachBeforeDark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestLocationNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteNameID")
                        .HasColumnType("int");

                    b.Property<double>("SpeedLimit")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Time")
                        .HasColumnType("float");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("notifyStatus")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationID");

                    b.HasIndex("DriverNameId");

                    b.HasIndex("RouteNameID");

                    b.HasIndex("VehicleId");

                    b.HasIndex("userID");

                    b.ToTable("JMPs");
                });

            modelBuilder.Entity("TempProject.Models.JMP_Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JMPID")
                        .HasColumnType("int");

                    b.Property<int>("PassengerID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JMPID");

                    b.HasIndex("PassengerID");

                    b.ToTable("JMP_Passengers");
                });

            modelBuilder.Entity("TempProject.Models.LeadershipVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadershipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadershipVisits");
                });

            modelBuilder.Entity("TempProject.Models.NonRecordableAccident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccidentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NonRecordableAccidents");
                });

            modelBuilder.Entity("TempProject.Models.PTSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumsofTrainees")
                        .HasColumnType("int");

                    b.Property<int>("RigId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RigId");

                    b.HasIndex("UserId");

                    b.ToTable("PTSMs");
                });

            modelBuilder.Entity("TempProject.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("TempProject.Models.PreventionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreventionCategorys");
                });

            modelBuilder.Entity("TempProject.Models.ProblemFacedDuringRigMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendationProblemRepeated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RigMovePerformanceId")
                        .HasColumnType("int");

                    b.Property<double>("TimeLostProblem")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RigMovePerformanceId");

                    b.ToTable("ProblemFacedDuringRigMoves");
                });

            modelBuilder.Entity("TempProject.Models.QHSEPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QHSEPositions");
                });

            modelBuilder.Entity("TempProject.Models.QHSEPositionName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("QHSEPositionNames");
                });

            modelBuilder.Entity("TempProject.Models.RecordableAccident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccidentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RecordableAccidents");
                });

            modelBuilder.Entity("TempProject.Models.ReportedByName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("ReportedByNames");
                });

            modelBuilder.Entity("TempProject.Models.ReportedByPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportedByPositions");
                });

            modelBuilder.Entity("TempProject.Models.Rig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rigs");
                });

            modelBuilder.Entity("TempProject.Models.RigMovePerformance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcceptanceDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("AcceptanceTime")
                        .HasColumnType("time");

                    b.Property<double>("ActualMoveTime")
                        .HasColumnType("float");

                    b.Property<double>("BudgetTargetTotalDay")
                        .HasColumnType("float");

                    b.Property<double>("BudgetTargetTotalMoney")
                        .HasColumnType("float");

                    b.Property<double>("DieselConsumed")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MoveDistance")
                        .HasColumnType("float");

                    b.Property<string>("NewWellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldWellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("ReleaseTime")
                        .HasColumnType("time");

                    b.Property<int>("RigId")
                        .HasColumnType("int");

                    b.Property<string>("TargetArchived")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RigId");

                    b.HasIndex("UserId");

                    b.ToTable("RigMovePerformances");
                });

            modelBuilder.Entity("TempProject.Models.RouteName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RouteNames");
                });

            modelBuilder.Entity("TempProject.Models.StopCardRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassificationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ReportedByNameID")
                        .HasColumnType("int");

                    b.Property<int>("ReportedByPositionID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopWorkAuthorityApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfObservationCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationID");

                    b.HasIndex("ReportedByNameID");

                    b.HasIndex("ReportedByPositionID");

                    b.HasIndex("TypeOfObservationCategoryID");

                    b.HasIndex("userID");

                    b.ToTable("StopCardRegisters");
                });

            modelBuilder.Entity("TempProject.Models.ToolPusherPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToolPusherPositions");
                });

            modelBuilder.Entity("TempProject.Models.ToolPusherPositionName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("ToolPusherPositionNames");
                });

            modelBuilder.Entity("TempProject.Models.TypeOfInjury", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfInjurys");
                });

            modelBuilder.Entity("TempProject.Models.TypeOfObservationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfObservationCategorys");
                });

            modelBuilder.Entity("TempProject.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LicenceExpireData")
                        .HasColumnType("date");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TempProject.Models.ViolationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViolationCategorys");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TempProject.Models.Accident", b =>
                {
                    b.HasOne("TempProject.Models.AccidentCauses", "AccidentCauses")
                        .WithMany("Accidents")
                        .HasForeignKey("AccidentCausesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ClassificationOfAccident", "ClassificationOfAccident")
                        .WithMany("Accidents")
                        .HasForeignKey("ClassificationOfAccidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.PreventionCategory", "PreventionCategory")
                        .WithMany("Accidents")
                        .HasForeignKey("PreventionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.QHSEPosition", "QHSEPosition")
                        .WithMany("Accidents")
                        .HasForeignKey("QHSEPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.QHSEPositionName", "QHSEPositionName")
                        .WithMany("Accidents")
                        .HasForeignKey("QHSEPositionNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.Rig", "Rig")
                        .WithMany("Accidents")
                        .HasForeignKey("RigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ToolPusherPosition", "ToolPusherPosition")
                        .WithMany("Accidents")
                        .HasForeignKey("ToolPusherPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ToolPusherPositionName", "ToolPusherPositionName")
                        .WithMany("Accidents")
                        .HasForeignKey("ToolPusherPositionNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.TypeOfInjury", "TypeOfInjury")
                        .WithMany("Accidents")
                        .HasForeignKey("TypeOfInjuryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ViolationCategory", "ViolationCategory")
                        .WithMany("Accidents")
                        .HasForeignKey("ViolationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccidentCauses");

                    b.Navigation("ClassificationOfAccident");

                    b.Navigation("PreventionCategory");

                    b.Navigation("QHSEPosition");

                    b.Navigation("QHSEPositionName");

                    b.Navigation("Rig");

                    b.Navigation("ToolPusherPosition");

                    b.Navigation("ToolPusherPositionName");

                    b.Navigation("TypeOfInjury");

                    b.Navigation("ViolationCategory");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.Attendance", b =>
                {
                    b.HasOne("TempProject.Models.PTSM", "PTSM")
                        .WithMany("Attendances")
                        .HasForeignKey("PTSMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PTSM");
                });

            modelBuilder.Entity("TempProject.Models.BOP", b =>
                {
                    b.HasOne("TempProject.Models.Rig", "Rig")
                        .WithMany()
                        .HasForeignKey("RigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rig");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.JMP", b =>
                {
                    b.HasOne("TempProject.Models.ComminucationMethod", "comminucationMethod")
                        .WithMany("JMPs")
                        .HasForeignKey("CommunicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.Driver", "DriverName")
                        .WithMany("JMPs")
                        .HasForeignKey("DriverNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.RouteName", "RouteName")
                        .WithMany("JMPs")
                        .HasForeignKey("RouteNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.Vehicle", "Vehicle")
                        .WithMany("JMPs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverName");

                    b.Navigation("RouteName");

                    b.Navigation("Vehicle");

                    b.Navigation("comminucationMethod");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.JMP_Passenger", b =>
                {
                    b.HasOne("TempProject.Models.JMP", "JMP")
                        .WithMany("jMP_Passengers")
                        .HasForeignKey("JMPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.Passenger", "Passenger")
                        .WithMany("jMP_Passengers")
                        .HasForeignKey("PassengerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JMP");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("TempProject.Models.PTSM", b =>
                {
                    b.HasOne("TempProject.Models.Rig", "Rig")
                        .WithMany()
                        .HasForeignKey("RigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rig");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.ProblemFacedDuringRigMove", b =>
                {
                    b.HasOne("TempProject.Models.RigMovePerformance", "RigMovePerformance")
                        .WithMany("problemFacedDuringRigMoves")
                        .HasForeignKey("RigMovePerformanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RigMovePerformance");
                });

            modelBuilder.Entity("TempProject.Models.QHSEPositionName", b =>
                {
                    b.HasOne("TempProject.Models.QHSEPosition", "QHSEPosition")
                        .WithMany("QHSEPositionNames")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QHSEPosition");
                });

            modelBuilder.Entity("TempProject.Models.ReportedByName", b =>
                {
                    b.HasOne("TempProject.Models.ReportedByPosition", "ReportedByPosition")
                        .WithMany("ReportedByNames")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportedByPosition");
                });

            modelBuilder.Entity("TempProject.Models.RigMovePerformance", b =>
                {
                    b.HasOne("TempProject.Models.Rig", "Rig")
                        .WithMany("RigMovePerformances")
                        .HasForeignKey("RigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rig");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.StopCardRegister", b =>
                {
                    b.HasOne("TempProject.Models.Classification", "Classification")
                        .WithMany("StopCardRegisters")
                        .HasForeignKey("ClassificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ReportedByName", "ReportedByName")
                        .WithMany("StopCardRegisters")
                        .HasForeignKey("ReportedByNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.ReportedByPosition", "ReportedByPosition")
                        .WithMany("StopCardRegisters")
                        .HasForeignKey("ReportedByPositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TempProject.Models.TypeOfObservationCategory", "TypeOfObservationCategory")
                        .WithMany("StopCardRegisters")
                        .HasForeignKey("TypeOfObservationCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("ReportedByName");

                    b.Navigation("ReportedByPosition");

                    b.Navigation("TypeOfObservationCategory");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TempProject.Models.ToolPusherPositionName", b =>
                {
                    b.HasOne("TempProject.Models.ToolPusherPosition", "ToolPusherPosition")
                        .WithMany("ToolPusherPositions")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToolPusherPosition");
                });

            modelBuilder.Entity("TempProject.Models.AccidentCauses", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.Classification", b =>
                {
                    b.Navigation("StopCardRegisters");
                });

            modelBuilder.Entity("TempProject.Models.ClassificationOfAccident", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.ComminucationMethod", b =>
                {
                    b.Navigation("JMPs");
                });

            modelBuilder.Entity("TempProject.Models.Driver", b =>
                {
                    b.Navigation("JMPs");
                });

            modelBuilder.Entity("TempProject.Models.JMP", b =>
                {
                    b.Navigation("jMP_Passengers");
                });

            modelBuilder.Entity("TempProject.Models.PTSM", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("TempProject.Models.Passenger", b =>
                {
                    b.Navigation("jMP_Passengers");
                });

            modelBuilder.Entity("TempProject.Models.PreventionCategory", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.QHSEPosition", b =>
                {
                    b.Navigation("Accidents");

                    b.Navigation("QHSEPositionNames");
                });

            modelBuilder.Entity("TempProject.Models.QHSEPositionName", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.ReportedByName", b =>
                {
                    b.Navigation("StopCardRegisters");
                });

            modelBuilder.Entity("TempProject.Models.ReportedByPosition", b =>
                {
                    b.Navigation("ReportedByNames");

                    b.Navigation("StopCardRegisters");
                });

            modelBuilder.Entity("TempProject.Models.Rig", b =>
                {
                    b.Navigation("Accidents");

                    b.Navigation("RigMovePerformances");
                });

            modelBuilder.Entity("TempProject.Models.RigMovePerformance", b =>
                {
                    b.Navigation("problemFacedDuringRigMoves");
                });

            modelBuilder.Entity("TempProject.Models.RouteName", b =>
                {
                    b.Navigation("JMPs");
                });

            modelBuilder.Entity("TempProject.Models.ToolPusherPosition", b =>
                {
                    b.Navigation("Accidents");

                    b.Navigation("ToolPusherPositions");
                });

            modelBuilder.Entity("TempProject.Models.ToolPusherPositionName", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.TypeOfInjury", b =>
                {
                    b.Navigation("Accidents");
                });

            modelBuilder.Entity("TempProject.Models.TypeOfObservationCategory", b =>
                {
                    b.Navigation("StopCardRegisters");
                });

            modelBuilder.Entity("TempProject.Models.Vehicle", b =>
                {
                    b.Navigation("JMPs");
                });

            modelBuilder.Entity("TempProject.Models.ViolationCategory", b =>
                {
                    b.Navigation("Accidents");
                });
#pragma warning restore 612, 618
        }
    }
}
